// Define the time frame
var startDate = '2020-10-25';
var endDate = '2022-11-15';

// Define the region of interest (India)
var indiaRegion = ee.Geometry.Rectangle([68, 6, 97, 35]); // [min lon, min lat, max lon, max lat]

// Load VIIRS DNB data for nighttime lights
var viirs = ee.ImageCollection('NOAA/VIIRS/DNB/MONTHLY_V1/VCMSLCFG')
  .filterDate(startDate, endDate)
  .map(function(image) {
    // Apply cloud masking or other preprocessing steps if necessary
    var cloudMask = image.select(['cf_cvg']).lt(50); // Adjust the threshold as needed
    var cleanedImage = image.updateMask(cloudMask);
    
    // Enhance the imagery to highlight lights during Diwali
    return cleanedImage.multiply(10); // Adjust the multiplier as needed
  });

// Visualize the spatial distribution and intensity of lights during Diwali
Map.addLayer(viirs.median(), {
  min: 0,
  max: 60,
  bands: ['avg_rad'],
  palette: ['black', 'blue', 'purple', 'cyan', 'white']
}, 'Enhanced Lights');

// Conduct quantitative analysis (e.g., calculate changes in light intensity)
var change = viirs.reduce(ee.Reducer.stdDev());

// Visualize the change in light intensity using the standard deviation band for average radiance
Map.addLayer(change.select(['avg_rad_stdDev']).clamp(0, 10), {
  palette: ['black', 'red'],
}, 'Change in Light Intensity');

// Identify areas with significant changes (you may need to set a threshold)
var significantChange = change.select(['avg_rad_stdDev']).gt(5); // Adjust the threshold as needed

// Visualize areas with significant changes
Map.addLayer(significantChange, {
  palette: ['white', 'red']
}, 'Significant Change');

// Load a population density dataset (WorldPop example)
var populationDensity = ee.ImageCollection('WorldPop/GP/100m/pop')
  .filterDate(startDate, endDate)
  .median();


// Correlate lights with population density within the specified region
var correlation = viirs.reduce(ee.Reducer.pearsonsCorrelation())
  .select([0], ['correlation'])
  .reduceRegion({
    reducer: ee.Reducer.first(),
    geometry: indiaRegion,
    scale: 1000,
    maxPixels: 50000000
  });

// Print the correlation result
print('Correlation between Lights and Population Density in India:', correlation);

// Add the correlation map to the Map
var correlationMap = viirs.reduce(ee.Reducer.pearsonsCorrelation())
  .select([0], ['correlation']);
Map.addLayer(correlationMap, {
  min: -1,
  max: 1,
  palette: ['red', 'white', 'blue']
}, 'Correlation Map');

// Load land cover data (e.g., Copernicus Global Land Cover Layers)
var landCover = ee.Image('COPERNICUS/Landcover/100m/Proba-V-C3/Global/2019')
  .select('discrete_classification');

// Adjust land cover visualization parameters
Map.addLayer(landCover, {
  min: 0,
  max: 200,
  palette: [
    '05450A', '086A10', '54A708', '78D203', '009900', 'C6C6C6', '1C0C02',
    'E4E4E4', '999999', '0D3A4A', '5475A8', 'C0C8E0', 'A3CC51', '60FF00',
    'A55200', 'D1903A', '0096A7', 'F9E4B7', 'FF9147', 'FFD93A', 'FF9147',
    'D5B21A', 'FF2D00', 'FF61A6', 'FF033E', 'D7C0D0', 'DDA5A5', 'FF277D'
  ]
}, 'Land Cover');


// Load air quality data (e.g., Sentinel-5P NO2)
var no2 = ee.ImageCollection('COPERNICUS/S5P/NRTI/L3_NO2')
  .filterDate(startDate, endDate)
  .select('NO2_column_number_density') // Select a single band for visualization
  .median();

// Visualize NO2 levels
Map.addLayer(no2, {
  min: 0,
  max: 0.0002,
  palette: ['black', 'blue', 'purple', 'cyan', 'white']
}, 'NO2 Levels');


// Display the map
Map.centerObject(indiaRegion, 5); // Centered around India
Map.setControlVisibility({ scaleControl: true });
